% \iffalse meta-comment
%
% Copyright (C) 2021 by Harvey Sheppard <harveysheppard75 [at] yandex [dot] com>
% -------------------------------------------------------
% 
% This file may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in:
%
%    http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of LaTeX 
% version 2005/12/01 or later.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{yCards.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{yCards}
%<*package>
    [2017/06/30 v1.0 creates cards-like (where cards refers to the Web-UI concept) graphical elements.]
    \RequirePackage{etoolbox}
    \RequirePackage{xparse}
    \RequirePackage{calc}
    \RequirePackage{tikz}
    \usetikzlibrary{backgrounds,shapes,calc,positioning,fit,shadows,shadows.blur}
    
    \RequirePackage{yMainColor}
%</package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{yCards}
\usepackage{csquotes}
\usepackage{xparse}
\usepackage{multicol}
\usepackage{tikz}
\usetikzlibrary{arrows, shapes}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\DeclareDocumentCommand{\cmdArg}{s m}{\textcolor{gray}{\IfBooleanF{#1}{\{}\textit{#2}\IfBooleanF{#1}{\}}}}
\begin{document}
  \DocInput{yCards.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v1.0}{2017/05/28}{Initial version}
%
% \GetFileInfo{yCards.dtx}
%
% \DoNotIndex{\newcommand,\newenvironment}
% 
%
% \title{The \textsf{yCards} package\thanks{This document
%   corresponds to \textsf{yCards}~\fileversion, dated \filedate.}}
% \author{Harvey Sheppard \\ \texttt{harveysheppard75 [at] yandex [dot] com}}
%
% \maketitle
%
% \begin{abstract}
%	The \textsf{yCards} package provides utilities to create cards-like (cards refers here to the web-UI concept) graphical elements.
% \end{abstract}
%
%
%
% \section{Example}
%
% \begin{multicols}{2}
%	
%\ycard[background/color=black][inversedmaincolor]{
%    \yccontent{{\Large\bfseries Title}}
%    \ycimage[Caption]{test.jpg}
%    \yccontent{This is the text of the card}
%}
%
% \columnbreak
% \begin{verbatim}
%\ycard[background/color=black][inversedmaincolor]{
%    \yccontent{{\Large\bfseries Title}}
%    \ycimage[Caption]{test.jpg}
%    \yccontent{This is the text of the card}
%}
% \end{verbatim}
%
%\end{multicols}
%
% \section{User Commands}
%
%
% \subsection{Cards}
% \DescribeMacro{\ycard[or][style]\{content\}}
%	All cards are created using this command.
%	The \verb|or| argument allows you to specify local overrides.
%	The \verb|style| argument allows you to specify a list of comma-separatted styles that will be applied sequentially to the card.
%	More details about styles are given in section \ref{sec:styles}.
%	The \verb|content| argument is list of commands that will describe the card's content.
%	The commands that you can issue in this place are described in section \ref{sec:content}.
%
% \subsection{Content Commands}
% \label{sec:content}
% \DescribeMacro{\yccontent[style]\{content\}}
%	Typesets a paragraph of text inside the card.
%	The \verb|style| argument allows to pass some configuration options to the tikz node created under the hood by this package.
%
% \DescribeMacro{\ycheader<*>[style]\{content\}}
%	Typesets a header for the card with a horizontal line below it.
%	If the command is starred, then no horizontal line will be added below the header.
%	Headers differ from normal content in the sense that a special color can be attributed to them.
%	The \verb|style| argument allows to pass some configuration options to the tikz node created under the hood by this package.
%
% \DescribeMacro{\ycfooter<*>[style]\{content\}}
%	Typesets a footer for the card with a horizontal line above it.
%	If the command is starred, then no horizontal line will be added.
%	Footers differ from normal content in the sense that a special color can be attributed to them.
%	The \verb|style| argument allows to pass some configuration options to the tikz node created under the hood by this package.
%
% \DescribeMacro{\ycline[style1][style2]}
%	Typesets a horizontal line.
%	The \verb|style1| argument allows to pass some configuration options to the tikz node that actually prints the line.
%	The \verb|style2| argument allows to pass some configuration options to the tikz node created below the line for spacing.
%
% \DescribeMacro{\ycimage[caption]\{image path\}}
%	Typesets an image that takes the full card width.
%	The \verb|caption| argument will typeset a caption on top of the image.
%	See section \ref{sec:configuration} for the list of option available for caption configuration.
%	The \verb|image path| argument is the path to the image to be printed.
%
%
% \subsection{Global Configuration}
% \DescribeMacro{\ycardsset\{keys\}}
%	This command allow to globally change the yCards options.
%	The \verb+<keys>+ argument must respect the tikz syntax.
%	The possible configuration options for the cards are described in section \ref{sec:configuration}.
%
%
% \subsection{Styles}
% \label{sec:styles}
%
% \DescribeMacro{\ycnewstyle\{name\}\{options\}}
%	Declare a new style named \verb|name| that applies the options described in \verb|options|.
%	The \verb|options| argument is a comma-separated list of configurations.
%	For the list of available configurations, see section \ref{sec:configuration}.%
%
% \DescribeMacro{\ycapptostyle\{name\}\{options\}}
%	Appends the configurations given in \verb|options| to the style named \verb|name|.
%
% \DescribeMacro{\ycapplystyle\{name\}}
%	Apply the style named \verb|name|.
%	This command is mostly seen inside the card environment.
%
% \section{Code}



% \subsection{Configuration Commands}

% \begin{macro}{\ycardsset}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycardsset}{m}{%
	\pgfqkeys{/ycards}{#1}%
}
%    \end{macrocode}
% \end{macro}



% \subsection{yCard Options}
% \label{sec:configuration}

% \begin{macro}{Padding}
%    \begin{macrocode}
\ycardsset{%
	padding/.initial = 1em,
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{Background}
%    \begin{macrocode}
\ycardsset{%
	background/color/.initial = white,
	background/opacity/.initial = 1,
	rounded corners/.initial = .3mm,
	shadow/.style = {%
		blur shadow={%
			shadow xshift=0mm,%
			shadow yshift=-.35mm,%
			shadow opacity=40,%
			shadow blur radius=.6mm,%
			shadow blur steps=30,%
		},%
	},%
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{Line around the card}
%    \begin{macrocode}
\ycardsset{%
	line width/.initial = 0pt,
	line color/.initial = lightGrey,
	line opacity/.initial = 1,
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{Content}
%    \begin{macrocode}
\ycardsset{%
	content/.cd,
	align/.initial = left,
	font/.initial = {},
	color/.initial = black,
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{Header}
%    \begin{macrocode}
\ycardsset{%
	header/.cd,
	color/.initial = black,
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{Footer}
%    \begin{macrocode}
\ycardsset{%
	footer/.cd,
	color/.initial = middleGrey,
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{Image}
%    \begin{macrocode}
\ycardsset{%
	image/.cd,
	padding/.initial = 0mm,
	align/.initial = left,
	font/.initial = {},
	color/.initial = white,
	text vertical align/.initial = bottom,
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{Separator line}
%    \begin{macrocode}
\ycardsset{%
	separator/.cd,
	line width/.initial = .5pt,
	line color/.initial = lightGrey,
}
%    \end{macrocode}
% \end{macro}




% \begin{macro}{\@yc@card@skeleton}
%	\begin{itemize}
%		\item Local overrides
%		\item Style
%		\item List of Content
% 	\end{itemize}
%    \begin{macrocode}
\newsavebox{\cardbox}
\DeclareDocumentCommand{\@yc@card@skeleton}{m m m}{%
	\savebox{\cardbox}{%
		\noindent%
		\begingroup%
		\ifstrempty{#2}{}{\forcsvlist{\ycapplystyle}{#2}}%
		\pgfkeys{/ycards/.cd, #1}%
		\begin{tikzpicture}[inner sep=0mm, node distance=0mm, outer sep=0mm]
			\begin{scope}
			\coordinate (cardNorthWest) at (0, 0);
			\coordinate[yshift=-.5*\pgfkeysvalueof{/ycards/line width}] (previous) at (cardNorthWest);
			#3
			\coordinate[yshift=-.5*\pgfkeysvalueof{/ycards/line width}] (cardSouthEast) at (previous.south east);
			\clip [
			rounded corners=\pgfkeysvalueof{/ycards/rounded corners},
			] (cardNorthWest) rectangle (cardSouthEast);
			\end{scope}
			\begin{scope}[on background layer]
			\fill[
			\pgfkeysvalueof{/ycards/background/color},
			opacity=\pgfkeysvalueof{/ycards/background/opacity},
			rounded corners=\pgfkeysvalueof{/ycards/rounded corners},
			/ycards/shadow,
			] (cardNorthWest) rectangle (cardSouthEast);
			\end{scope}
		\end{tikzpicture}%
		\endgroup%
	}%
	\noindent%
	\begingroup%
	\ifstrempty{#2}{}{\forcsvlist{\ycapplystyle}{#2}}%
	\pgfkeys{/ycards/.cd, #1}%
	\begin{tikzpicture}[inner sep=0mm, node distance=0mm, outer sep=0mm]
		\begin{scope}
			\coordinate (cardNorthWest) at (0, 0);
			\coordinate[yshift=-.5*\pgfkeysvalueof{/ycards/line width}] (previous) at (cardNorthWest);
			\coordinate[yshift=-.5*\pgfkeysvalueof{/ycards/line width}] (cardSouthEast) at ($(cardNorthWest) + (\wd\cardbox, -\ht\cardbox)$);
			\clip [
				rounded corners=\pgfkeysvalueof{/ycards/rounded corners},
			] (cardNorthWest) rectangle (cardSouthEast);
			#3
		\end{scope}
		\begin{scope}[on background layer]
			\fill[
				\pgfkeysvalueof{/ycards/background/color},
				opacity=\pgfkeysvalueof{/ycards/background/opacity},
				rounded corners=\pgfkeysvalueof{/ycards/rounded corners},
				/ycards/shadow,
			] (cardNorthWest) rectangle (cardSouthEast);
		\end{scope}
		\draw[
			\pgfkeysvalueof{/ycards/line color},
			line width=\pgfkeysvalueof{/ycards/line width},
			opacity=\pgfkeysvalueof{/ycards/line opacity},
			rounded corners=\pgfkeysvalueof{/ycards/rounded corners}
		] (cardNorthWest) rectangle (cardSouthEast);
	\end{tikzpicture}%
	\endgroup%
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{\yccontent}
%    \begin{macrocode}
\DeclareDocumentCommand{\yccontent}{O{} m}{%
	\node[
		anchor=north west,
		align=\pgfkeysvalueof{/ycards/content/align},
		text width=\linewidth-2*\pgfkeysvalueof{/ycards/padding}-\pgfkeysvalueof{/ycards/line width},
		inner sep=\pgfkeysvalueof{/ycards/padding},
		font=\pgfkeysvalueof{/ycards/content/font},
		text=\pgfkeysvalueof{/ycards/content/color},
		#1,
	] (previous) at (previous.south west) {#2};
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{\ycheader}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycheader}{s O{} m}{%
	\node[
		anchor=north west,
		align=\pgfkeysvalueof{/ycards/content/align},
		text width=\linewidth-2*\pgfkeysvalueof{/ycards/padding}-\pgfkeysvalueof{/ycards/line width},
		inner sep=\pgfkeysvalueof{/ycards/padding},
		font=\pgfkeysvalueof{/ycards/content/font},
		text=\pgfkeysvalueof{/ycards/header/color},
		#2
	] (previous) at (previous.south west) {#3};
	\IfBooleanF{#1}{\ychline}
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{\ycfooter}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycfooter}{s O{} m}{%
	\IfBooleanF{#1}{\ychline}
	\node[
		anchor=north west,
		align=\pgfkeysvalueof{/ycards/content/align},
		text width=\linewidth-2*\pgfkeysvalueof{/ycards/padding}-\pgfkeysvalueof{/ycards/line width},
		inner sep=\pgfkeysvalueof{/ycards/padding},
		font=\pgfkeysvalueof{/ycards/content/font},
		text=\pgfkeysvalueof{/ycards/footer/color},
		#2,
	] (previous) at (previous.south west) {#3};
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{\ychline}
%    \begin{macrocode}
\DeclareDocumentCommand{\ychline}{O{} O{}}{%
	\node[
		line width=0mm,
		inner sep=0mm,
		minimum height=\pgfkeysvalueof{/ycards/separator/line width},
		minimum width=\linewidth-1.5*\pgfkeysvalueof{/ycards/line width},
		rectangle,
		fill=\pgfkeysvalueof{/ycards/separator/line color},
		anchor=north west,
		#1,
	] at ($(previous.south west) + (.5*\pgfkeysvalueof{/ycards/line width}, 0)$) {};
	\node [
		line width=0mm,
		minimum height=\pgfkeysvalueof{/ycards/separator/line width},
		minimum width=\linewidth-\pgfkeysvalueof{/ycards/line width},
		anchor=north west,
		#2,
	] (previous) at (previous.south west) {};
}
%    \end{macrocode}
% \end{macro}


% \begin{macro}{\ycimage}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycimage}{O{} m}{%
	\node[
		line width=0mm,
		inner sep=\pgfkeysvalueof{/ycards/image/padding},
		text width=\linewidth-2*\pgfkeysvalueof{/ycards/image/padding}-1.5*\pgfkeysvalueof{/ycards/line width},
		anchor=north west,
	] (ycimage) at ($(previous.south west) + (.5*\pgfkeysvalueof{/ycards/line width}, 0)$) {\includegraphics[width=\linewidth]{#2}};
	\coordinate[xshift=-.5*\pgfkeysvalueof{/ycards/line width}] (tempnorthwest) at (ycimage.north west);
	\coordinate[xshift=.5*\pgfkeysvalueof{/ycards/line width}] (tempsoutheast) at (ycimage.south east);
	\ifstrequal{\pgfkeysvalueof{/ycards/image/text vertical align}}{top}{%
		\node[
			anchor = north west,
			align=\pgfkeysvalueof{/ycards/image/align},
			text width=\linewidth-2*\pgfkeysvalueof{/ycards/padding}-\pgfkeysvalueof{/ycards/line width},
			inner sep=\pgfkeysvalueof{/ycards/padding},
			font=\pgfkeysvalueof{/ycards/image/font},
			text=\pgfkeysvalueof{/ycards/image/color},
		] at (tempnorthwest) {#1};
	}{%
		\node[
			anchor = south west,
			align=\pgfkeysvalueof{/ycards/image/align},
			text width=\linewidth-2*\pgfkeysvalueof{/ycards/padding}-\pgfkeysvalueof{/ycards/line width},
			inner sep=\pgfkeysvalueof{/ycards/padding},
			font=\pgfkeysvalueof{/ycards/image/font},
			text=\pgfkeysvalueof{/ycards/image/color},
		] at ($(ycimage.south west) + (-.5*\pgfkeysvalueof{/ycards/line width}, 0)$) {#1};
	}
	\node[
		line width=0mm,
		fit=(tempnorthwest)(tempsoutheast),
	] (previous) {};
}
%    \end{macrocode}
% \end{macro}


% \subsection{Style definition}

% \begin{macro}{\ycnewstyle}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycnewstyle}{m m}{%
	\pgfkeys{%
		/ycards/#1/.style={/ycards/.cd,#2}%
	}%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\ycapptostyle}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycapptostyle}{m m}{%
	\pgfkeys{
		/ycards/#1/.append style = {#2}
	}%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{\ycapplystyle}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycapplystyle}{m}{%
	\pgfkeys{/ycards/#1}%
}
%    \end{macrocode}
% \end{macro}


% \subsection{Default Styles}

% \begin{macro}{noborder}
%    \begin{macrocode}
\ycnewstyle{noborder}{
	line width=0mm,%
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{inversed}
%    \begin{macrocode}
\ycnewstyle{inversed}{
	content/color=white,
	background/color=black,
}
%    \end{macrocode}
% \end{macro}

% \begin{macro}{inversedmaincolor}
%    \begin{macrocode}
\ycnewstyle{inversedmaincolor}{
	content/color=white,
	background/color=mainColor,
}
%    \end{macrocode}
% \end{macro}


% \subsection{Shortcut commands}

% \begin{macro}{\ycard}
%    \begin{macrocode}
\DeclareDocumentCommand{\ycard}{O{} O{} m}{%
	\@yc@card@skeleton{#1}{#2}{#3}
}
%    \end{macrocode}
% \end{macro}

%
% \Finale
\endinput
